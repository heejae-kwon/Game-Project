#version 400 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec4 aColor;
//layout (location = 2) in vec2 aTexCoord;


uniform mat4 model;      // local object to camera
uniform mat4 projection; // camera to normalized coordinates (0-1)
uniform mat4 view;       // normalized coordinates to window coordinates

out vec3 Position; 
out vec4 ourColor;
// vec2 TexCoord;

out vec3 Normal;

void main()
{
	gl_Position = projection * view * model * vec4(aPos, 1.0);
	ourColor = aColor;
	Normal = vec3(0.0f,1.0f,0.0f);
	Position = aPos;
	//TexCoord = vec2(aTexCoord.x, aTexCoord.y);
}