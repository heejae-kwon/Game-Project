#version 430 core
layout (location = 0) in vec3 Position;
layout (location = 1) in vec3 Normal;
layout (location = 2) in vec2 UV;

out VS_OUT {
    vec3 FragPos;
    vec3 Normal;
    vec2 TexCoords;
} vs_out;

layout (location = 0) uniform mat4 projection;
layout (location = 1) uniform mat4 view;
layout (location = 2) uniform mat4 model;

void main()
{
    vs_out.FragPos =  vec3(view * model * vec4(Position, 1.0) );
    vs_out.Normal = normalize(mat3(transpose(inverse(view * model))) * Normal);
    vs_out.TexCoords = UV;
    gl_Position = projection * view * model * vec4(Position, 1.0);
}